



#LIB MSINIT

; ↓これらは使われない(自動判別でどちらかが使われる)
; for X1 CZ-8BM2
ZSIO	EQU	1F98h
ZCTC	EQU	1FA8h
; for X1 turbo
;ZSIO	EQU	1F90h
;ZCTC	EQU	1FA0h

SETMS:
	DI
	; turbo or CZ-8BM2の判定＆パッチ処理
	CALL	CTCPATCH
	; WIDTH 40 or 80でのパッチ処理
	CALL	WIDTHPATCH

	CALL	SETCTC
	CALL	SETSIO
	EI
	RET

WIDTHPATCH:
	LD	A,(NAME_SPACE_DEFAULT.AT_WIDTH)
	CP	40
	JR	NZ,.W80
	LD	HL,320
	JR	.WEND
.W80
	LD	HL,640
.WEND
	LD	(XOVER0+1),HL
	RET

CTCPATCH:
; turbo系か、CZ-8BM2かを調べる(NAME_SPACE_DEFAULT.CTCADR にどちらかが入る)
	LD	BC,01FA8h
	CALL	NAME_SPACE_DEFAULT.SETUPCTC
	LD	BC,01FA0h
	CALL	NAME_SPACE_DEFAULT.SETUPCTC

	LD	HL,(NAME_SPACE_DEFAULT.CTCADR)
	INC	L	; CTC+2
	INC	L
	EX	DE,HL

;	update CTC address
	LD	HL,SETCTC+1
	LD	(HL),E
	INC	HL
	LD	(HL),D

;	update SIO address
	EX	DE,HL
	OR	A
	LD	BC,0Fh	; CTC+2 - 10h + 1
	SBC	HL,BC
	LD	(SETSIO+1),HL
	LD	(MSIN+1),HL
	LD	(MSDATGET+1),HL
	RET

SETCTC:
	LD	BC,ZCTC+2
	LD	A,01000111b
	OUT	(C),A
	LD	A,26
	OUT	(C),A
	RET
;
SETSIO:
	LD	BC,ZSIO+3
	LD	HL,SIODAT
	LD	D,15
SIOL:	LD	A,(HL)
	INC	HL
	OUT	(C),A
	DEC	D
	JR	NZ,SIOL
;
	RET
;
SIODAT:
	DB	00011000b
	DB	1,00h
	DB	2,70h
	DB	4,01000100b
	DB	5,00h
	DB	6,00h
	DB	7,00h
	DB	3,11000001b

#ENDLIB

#LIB MSGET
	PUSH	HL
	CALL	MSIN
	JR	C,MSERR
	; 読めたのでX位置,Y位置,ボタンを更新
	LD	HL,MSDAT
	LD	A,(HL)		; get status
	PUSH	AF
	LD	B,A
	LD	A,07Fh		; X移動量(127)
	INC	HL
	BIT	4,B		; X overflow?
	JR	Z,NOXOVER
	; Aを127のままにする
	JR	XOK
NOXOVER:
	BIT	5,B		; X underflow?
	JR	Z,NOXUNDER
	CPL			; 07fh->080h(-128)
	JR	XOK
NOXUNDER:
	LD	A,(HL)
XOK:
	CALL	CALCV
	PUSH	DE		; X移動量
	INC	HL

	LD	A,07fh		; Y移動量
	BIT	6,B		; Y overflow?
	JR	Z,NOYOVER
	; Aを127のままにする
	JR	YOK
NOYOVER:
	BIT	7,B		; Y underflow?
	JR	Z,NOYUNDER
	CPL
	JR	YOK
NOYUNDER:
	LD	A,(HL)
YOK:
	CALL	CALCV		; Y移動量
	LD	HL,(MSRESULT+2)	; 現在Y
	ADD	HL,DE

	LD	A,H
	OR	A
	JR	Z,YOVER0
	; 負値なので0にする
	LD	H,0
	LD	L,0
	JR	YRANGEOK
YOVER0:
	LD	BC,200
	OR	A
	PUSH	HL
	SBC	HL,BC
	POP	HL
	JR	C,YRANGEOK
	; 200以上なので199にする
	LD	H,B
	LD	L,C
	DEC	HL
YRANGEOK:
	LD	(MSRESULT+2),HL	; 現在Y

	POP	DE
	LD	HL,(MSRESULT)	; 現在X
	ADD	HL,DE
	; X<0?
	BIT	7,H
	JR	Z,XOVER0
	XOR	A
	LD	H,A
	LD	L,A
	JR	XRANGEOK
XOVER0:
	LD	BC,320
	OR	A
	PUSH	HL
	SBC	HL,BC
	POP	HL
	JR	C,XRANGEOK
	LD	H,B
	LD	L,C
	DEC	HL
XRANGEOK:
	LD	(MSRESULT),HL	; 現在X

	POP	AF
	AND	3
	LD	L,A
	LD	H,0
	LD	(MSRESULT+4),HL

	POP	DE
	LD	HL,MSRESULT
	LD	C,5
	LD	B,0
	LDIR
	RET

MSERR:
	POP	HL
	RET

CALCV:
	LD	E,A
	LD	D,0
	RLCA
	RET	NC
	DEC	D
	RET

MSRESULT:
	DW	100	; X
	DW	50	; Y
	DW	0	; BTN(bit0=btn1 bit1=btn2)

; INPUT:
MSIN:
	LD	BC,ZSIO+3
	LD	A,5		; ->WR5
	OUT	(C),A
	XOR	A
	OUT	(C),A		; RTS High
;
	LD	D,80h
MSINW:	DEC	D		; WAIT
	JR	NZ,MSINW
;
	LD	A,5
	OUT	(C),A		; WR5 SELECT
	LD	A,2
	OUT	(C),A		; RTS Low
;
	LD	E,1		; RETRY COUNT
	LD	HL,MSDAT
	LD	D,3		; COUNT
MSRTRY:
;
MSINL:
	PUSH	HL
	CALL	MSDATGET
	POP	HL
	JR	C,FAIL
	LD	(HL),A
	INC	HL
	DEC	D
	JR	NZ,MSINL
	OR	A		; RESET CARRY FLAG
	RET
;
FAIL:
	LD	HL,MSDAT
	DEC	E
	JR	NZ,MSRTRY

	; ERROR
ERRRET:
	LD	HL,1
	SCF
	RET
MSDAT:
	DS	3

MSDATGET:
	LD	BC,ZSIO+3
	LD	HL,0000h
MSGET0:	DEC	HL
	LD	A,H
	OR	L
	JR	Z,LATE
;
	XOR	A
	OUT	(C),A		; RR0 SELECT
	IN	A,(C)
	RRA			; Bit0 ON?
	JR	NC,MSGET0
;
	DEC	BC		; BC=1F92h
	IN	A,(C)		; GET DATA
	OR	A		; RESET CARRY FLAG
	RET
;
LATE:	
	PUSH	DE
	CALL	SETMS
	POP	DE
	JP	ERRRET
	; よくわからんので初期化して戻る
;
;;HL=0000h
;LATE0:	DEC	HL
;	LD	A,H
;	OR	L
;	JR	NZ,LATE0
;;
;	JP	ERRRET
	;RET
;
	


#ENDLIB